steps:
  # Yarn install
  #- name: 'gcr.io/${PROJECT_ID}/ubuntu-node-python:22.0.4-3.10-16.17'
  - name: 'ubuntu:latest'
    entrypoint: 'yarn'
    args: ['install', '--frozen-lockfile', '--network-timeout', '300000']
  # Yarn tsc
  - name: 'gcr.io/cloud-builders/yarn'
    entrypoint: 'yarn'
    args: ['tsc']
  # Yarn build
  - name: 'gcr.io/cloud-builders/yarn'
    entrypoint: 'yarn'
    args: ['build']
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '.',
        '-f',
        'packages/backend/Dockerfile',
        '-t',
        'gcr.io/${PROJECT_ID}/backstage:xtech-micro-${COMMIT_SHA}',
        '-t',
        'gcr.io/${PROJECT_ID}/backstage:xtech-micro',
      ]
  ## Docker Push
  #- name: 'gcr.io/cloud-builders/docker'
  #  args: ['push', 'gcr.io/${PROJECT_ID}/backstage:xtech-micro-${COMMIT_SHA}']
  ## Docker Push
  #- name: 'gcr.io/cloud-builders/docker'
  #  args: ['push', 'gcr.io/${PROJECT_ID}/backstage:xtech-micro']
  ## Deploy on cloud Run
  #- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #  entrypoint: 'gcloud'
  #  args:
  #    [
  #      'run',
  #      'deploy',
  #      'backstage-xtech-micro',
  #      '--image',
  #      'gcr.io/${PROJECT_ID}/backstage:xtech-micro-${COMMIT_SHA}',
  #      '--region',
  #      'europe-west1',
  #      '--service-account',
  #      '${_SERVICE_ACCOUNT}',
  #      '--set-env-vars=POSTGRES_USER=$$BACKSTAGE_PG_USERNAME,POSTGRES_PASSWORD=$$BACKSTAGE_PG_PASSWORD,POSTGRES_HOST=${_POSTGRES_HOST},BACKSTAGE_APP_URL=${_BACKSTAGE_APP_URL},BACKSTAGE_CORS=${_BACKSTAGE_APP_URL}',
  #    ]
  #  secretEnv: ['BACKSTAGE_PG_USERNAME', 'BACKSTAGE_PG_PASSWORD']
av#ailableSecrets:
  #secretManager:
  #  - versionName: projects/${PROJECT_ID}/secrets/BACKSTAGE_PG_PASSWORD/versions/latest
  #    env: 'BACKSTAGE_PG_PASSWORD'
  #  - versionName: projects/${PROJECT_ID}/secrets/BACKSTAGE_PG_USERNAME/versions/latest
  #    env: 'BACKSTAGE_PG_USERNAME'
#
